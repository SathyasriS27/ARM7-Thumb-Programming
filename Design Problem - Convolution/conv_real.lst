


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             CONV, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000         
    4 00000000 E3A00101        LDR              R0, =0X40000000
    5 00000004 E59F10F0        LDR              R1, =0X40000050 ; Base address 
                                                            for h(n)
    6 00000008 E59F20F0        LDR              R2, =0X40002000 ; Base address 
                                                            for h(-n)
    7 0000000C E59F90F0        LDR              R9, =0X40002500 ; Base address 
                                                            for output
    8 00000010 E5906000        LDR              R6, [R0]    ; Contents of 0x400
                                                            00000 in R6
    9 00000014         
   10 00000014         
   11 00000014         ; Loop to invert h(n) to h(-n):
   12 00000014         
   13 00000014         LOOP
   14 00000014 E2466001        SUB              R6, R6, #1  ; Decrement counter
                                                             (R6)  
   15 00000018 E2422004        SUB              R2, R2, #4  ; Decrement R2
   16 0000001C E4913004        LDR              R3, [R1], #4 ; Store contents o
                                                            f address at R3 and
                                                             increment R1
   17 00000020 E5823000        STR              R3, [R2]    ; Store contents of
                                                             R3 in R2
   18 00000024 E3560000        CMP              R6, #0      ; Comparing counter
                                                             with 0
   19 00000028 1AFFFFF9        BNE              LOOP
   20 0000002C         
   21 0000002C         
   22 0000002C         ; h(-n) created, base address stored in R2
   23 0000002C         
   24 0000002C E1A01002        MOV              R1, R2      ; Moving base addre
                                                            ss of h(-n) to R1
   25 00000030 E4906004        LDR              R6, [R0], #4 ; Restoring counte
                                                            r in R6
   26 00000034 E3A07000        MOV              R7, #0x00   ; Initializing coun
                                                            ter to 0
   27 00000038         
   28 00000038         OUTER
   29 00000038 E3A0B000        MOV              R11, #0X00
   30 0000003C E59F50B8        LDR              R5, =0X40000050 ; Base address 
                                                            for h(n)
   31 00000040 E3A00101        LDR              R0, =0X40000000
   32 00000044 E2877001        ADD              R7, R7, #1  ; Incrementing coun
                                                            ter by 1
   33 00000048 E3A0A004        MOV              R10, #4
   34 0000004C E0040A97        MUL              R4, R7, R10
   35 00000050 E0800004        ADD              R0, R0, R4  ; Highest index of 
                                                            x(n) in overlap, st
                                                            ored in R0
   36 00000054 E1A08007        MOV              R8, R7      ; Copying counter f
                                                            rom R7 to R8
   37 00000058 EAFFFFFF        B                INNER
   38 0000005C         
   39 0000005C         INNER
   40 0000005C E2488001        SUB              R8, R8, #1  ; Decrement sub-cou
                                                            nter
   41 00000060 E5952000        LDR              R2, [R5]



ARM Macro Assembler    Page 2 


   42 00000064 E590C000        LDR              R12, [R0]
   43 00000068 E00A0C92        MUL              R10, R2, R12 ; Multiply content
                                                            s of R5 and R0, sto
                                                            re in R10
   44 0000006C E08BB00A        ADD              R11, R11, R10 ; Adding R10 to R
                                                            11 after each multi
                                                            plication (Summatio
                                                            n)
   45 00000070 E2855004        ADD              R5, R5, #4
   46 00000074 E2400004        SUB              R0, R0, #4  ; Decrementing regi
                                                            ster addresses
   47 00000078 E3580000        CMP              R8, #0
   48 0000007C 1AFFFFF6        BNE              INNER
   49 00000080 0AFFFFFF        BEQ              WRITEOP     ; Once inner loop f
                                                            inishes, add output
                                                             to address
   50 00000084         
   51 00000084         WRITEOP
   52 00000084 E589B000        STR              R11, [R9]   ; Storing the outpu
                                                            t
   53 00000088 E2899004        ADD              R9, R9, #4  ; Incrementing addr
                                                            ess in R9 by 4  
   54 0000008C E3A0C101        LDR              R12, =0X40000000 ; Retrieving N
                                                             from 0x40000000
   55 00000090 E59CC000        LDR              R12, [R12]
   56 00000094 E157000C        CMP              R7, R12
   57 00000098 1AFFFFE6        BNE              OUTER
   58 0000009C         
   59 0000009C         
   60 0000009C         ; h(n) completely overlaps x(n), now it shifts away
   61 0000009C         
   62 0000009C E24CC001        SUB              R12, R12, #1 ; Counter at N - 1
                                                            
   63 000000A0 E3A04111        LDR              R4, =0X40000004
   64 000000A4         
   65 000000A4         SECONDHALF
   66 000000A4 E1A00004        MOV              R0, R4      ; 0x40000004 in R0
   67 000000A8 E1A03001        MOV              R3, R1      ; Copying starting 
                                                            address of h(-n) to
                                                             R3
   68 000000AC E3A0B000        MOV              R11, #0X00  ; Initializing outp
                                                            ut to 0
   69 000000B0 E1A0800C        MOV              R8, R12     ; Copying counter a
                                                            t N - 1
   70 000000B4 E591A000        LDR              R10, [R1]   ; Storing h(-n) in 
                                                            R10 
   71 000000B8         ; MOV R6, R0       ; Storing address pointing to last el
                       ement of x(n) in R6
   72 000000B8 EAFFFFFF        B                SECONDIN
   73 000000BC         
   74 000000BC         SECONDIN
   75 000000BC E5B07004        LDR              R7, [R0, #4]! ; R7 stores the v
                                                            alue of x(n), R0 up
                                                            dated
   76 000000C0 E5932000        LDR              R2, [R3]
   77 000000C4 E0050297        MUL              R5, R7, R2  ; Multiply contents
                                                             of R7 and R2
   78 000000C8 E08BB005        ADD              R11, R11, R5 ; Updating R11 (Su
                                                            mmation) 



ARM Macro Assembler    Page 3 


   79 000000CC E2488001        SUB              R8, R8, #1  ; Decrement counter
                                                            
   80 000000D0 E2833004        ADD              R3, R3, #4  ; Increment h(-n) a
                                                            ddress at R13
   81 000000D4 E3580000        CMP              R8, #0
   82 000000D8 1AFFFFF7        BNE              SECONDIN
   83 000000DC 0AFFFFFF        BEQ              WRITESEC
   84 000000E0         
   85 000000E0         WRITESEC
   86 000000E0 E589B000        STR              R11, [R9]   ; Output in address
                                                             at R9
   87 000000E4 E2899004        ADD              R9, R9, #4  ; Incrementing addr
                                                            ess in R9 by 4  
   88 000000E8 E24CC001        SUB              R12, R12, #1
   89 000000EC         ; ADD R1, R1, #4
   90 000000EC E2844004        ADD              R4, R4, #4
   91 000000F0 E35C0000        CMP              R12, #0
   92 000000F4 1AFFFFEA        BNE              SECONDHALF
   93 000000F8         
   94 000000F8 EAFFFFFE 
                       UP      B                UP
   95 000000FC                 END
              40000050 
              40002000 
              40002500 
Command Line: --debug --xref --device=DARMP --apcs=interwork -oconv_real.o -I"C
:\Program Files\ARM\INC\Philips" --predefine="__EVAL SETA 1" --list=conv_real.l
st conv_real.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CONV 00000000

Symbol: CONV
   Definitions
      At line 1 in file conv_real.asm
   Uses
      None
Comment: CONV unused
INNER 0000005C

Symbol: INNER
   Definitions
      At line 39 in file conv_real.asm
   Uses
      At line 37 in file conv_real.asm
      At line 48 in file conv_real.asm

LOOP 00000014

Symbol: LOOP
   Definitions
      At line 13 in file conv_real.asm
   Uses
      At line 19 in file conv_real.asm
Comment: LOOP used once
OUTER 00000038

Symbol: OUTER
   Definitions
      At line 28 in file conv_real.asm
   Uses
      At line 57 in file conv_real.asm
Comment: OUTER used once
SECONDHALF 000000A4

Symbol: SECONDHALF
   Definitions
      At line 65 in file conv_real.asm
   Uses
      At line 92 in file conv_real.asm
Comment: SECONDHALF used once
SECONDIN 000000BC

Symbol: SECONDIN
   Definitions
      At line 74 in file conv_real.asm
   Uses
      At line 72 in file conv_real.asm
      At line 82 in file conv_real.asm

UP 000000F8

Symbol: UP
   Definitions
      At line 94 in file conv_real.asm
   Uses
      At line 94 in file conv_real.asm
Comment: UP used once
WRITEOP 00000084



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: WRITEOP
   Definitions
      At line 51 in file conv_real.asm
   Uses
      At line 49 in file conv_real.asm
Comment: WRITEOP used once
WRITESEC 000000E0

Symbol: WRITESEC
   Definitions
      At line 85 in file conv_real.asm
   Uses
      At line 83 in file conv_real.asm
Comment: WRITESEC used once
9 symbols
331 symbols in table
